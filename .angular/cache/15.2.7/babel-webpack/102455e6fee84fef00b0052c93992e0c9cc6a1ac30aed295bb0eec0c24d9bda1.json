{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FaceRecognitionService = /*#__PURE__*/(() => {\n  class FaceRecognitionService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    sendImage(subscriptionKey, base64Image) {\n      const headers = this.getHeaders(subscriptionKey);\n      const params = this.getParams();\n      const blob = this.makeblob(base64Image);\n      return this.httpClient.post(environment.endpoint, blob, {\n        params,\n        headers\n      });\n    }\n    makeblob(dataURL) {\n      const BASE64_MARKER = ';base64,';\n      const parts = dataURL.split(BASE64_MARKER);\n      const contentType = parts[0].split(':')[1];\n      const raw = window.atob(parts[1]);\n      const rawLength = raw.length;\n      const uInt8Array = new Uint8Array(rawLength);\n      for (let i = 0; i < rawLength; ++i) {\n        uInt8Array[i] = raw.charCodeAt(i);\n      }\n      return new Blob([uInt8Array], {\n        type: contentType\n      });\n    }\n    //creating HTTP headers\n    getHeaders(subscriptionKey) {\n      let headers = new HttpHeaders();\n      headers = headers.set('Content-Type', 'application/octet-stream');\n      headers = headers.set('Ocp-Apim-Subscription-Key', subscriptionKey);\n      return headers;\n    }\n    //query parameters\n    //e.g. .../detect?returnFaceId=false&returnFaceAttributes=glasses\n    //\n    getParams() {\n      const httpParams = new HttpParams().set('returnFaceId', 'false').set('returnFaceLandmarks', 'false').set('returnFaceAttributes', 'glasses');\n      return httpParams;\n    }\n  }\n  FaceRecognitionService.ɵfac = function FaceRecognitionService_Factory(t) {\n    return new (t || FaceRecognitionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  FaceRecognitionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FaceRecognitionService,\n    factory: FaceRecognitionService.ɵfac\n  });\n  return FaceRecognitionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}