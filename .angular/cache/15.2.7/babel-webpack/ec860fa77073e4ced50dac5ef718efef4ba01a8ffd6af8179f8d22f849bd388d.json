{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CameraService = /*#__PURE__*/(() => {\n  class CameraService {\n    /* returns mediaDevices object\n    which provides access to the user's camera and microphone. */\n    getMedia() {\n      const mediaDevices = (window.navigator.mozGetUserMedia || window.navigator.webkitGetUserMedia ? {\n        getUserMedia: options => {\n          return new Promise((resolve, reject) => {\n            (window.navigator.mozGetUserMedia || window.navigator.webkitGetUserMedia).call(window.navigator, options, resolve, reject);\n          });\n        }\n      } : null) || window.navigator.mediaDevices;\n      return mediaDevices;\n    }\n    /* */\n    takeNewPhoto() {\n      return new Observable(observer => {\n        this.getMedia()\n        // ask for permissions\n        .getUserMedia({\n          video: true,\n          audio: false\n        }).then(stream => {\n          const docRef = document;\n          const videoElement = docRef.createElement('video');\n          videoElement.srcObject = stream;\n          videoElement.play();\n          const takePhotoInternal = () => {\n            const canvasElement = docRef.createElement('canvas');\n            canvasElement.setAttribute('width', videoElement.videoWidth.toString());\n            canvasElement.setAttribute('height', videoElement.videoHeight.toString());\n          };\n          if (videoElement.readyState >= videoElement.HAVE_FUTURE_DATA) {\n            takePhotoInternal();\n          } else {\n            videoElement.addEventListener('canplay', function () {\n              takePhotoInternal();\n            }, false);\n          }\n        }, error => {\n          console.log(error);\n        });\n      });\n    }\n  }\n  CameraService.ɵfac = function CameraService_Factory(t) {\n    return new (t || CameraService)();\n  };\n  CameraService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CameraService,\n    factory: CameraService.ɵfac\n  });\n  return CameraService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}